sensor:
  # wb1 Яркость
  - platform: modbus_controller
    modbus_controller_id: wb1
    id: brightness_sensor_wb1_ch1
    address: {{ 2000 + reg }}
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 0
    internal: true
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    on_value:
      then:
        - lambda: |-
            uint16_t current = (uint16_t)x;
            if (id(last_brightness_value_wb1_ch1) == current) {
              if (!id(brightness_stable_wb1_ch1)) {
                id(brightness_stable_wb1_ch1) = true;
                float brightness = current / 100.0f;
                if (id(light_wb1_ch1).current_values.get_brightness() != brightness) {
                  id(light_wb1_ch1).turn_on().set_brightness(brightness).perform();
                }
              }
            } else {
              id(last_brightness_value_wb1_ch1) = current;
              id(brightness_stable_wb1_ch1) = false;
            }

  # wb1 Двойное нажатие
  - platform: modbus_controller
    modbus_controller_id: wb1
    id: double_press_sensor_wb1_ch1
    address: {{ 496 + reg }}
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(double_press_counter_wb1_ch1)) {
              id(double_press_counter_wb1_ch1) = (uint16_t)x;
              id(double_press_event_wb1_ch1).publish_state(true);
              id(double_press_event_reset_wb1_ch1).execute();
            }

  # wb1 долгое нажатие
  - platform: modbus_controller
    modbus_controller_id: wb1
    id: long_press_sensor_wb1_ch1
    address: {{ 480 + reg }}
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(long_press_counter_wb1_ch1)) {
              id(long_press_counter_wb1_ch1) = (uint16_t)x;
              id(long_press_event_wb1_ch1).publish_state(true);
              id(long_press_event_reset_wb1_ch1).execute();
            }


  # wb1 Коротко + долгое нажатие
#  - platform: modbus_controller
#    modbus_controller_id: wb1
#    id: short_long_press_sensor_wb1_ch1
#    address: {{ 512 + reg }}
#    register_type: holding
#    internal: true
#    on_value:
#      then:
#        - lambda: |-
#            if ((uint16_t)x != id(short_long_press_counter_wb1_ch1)) {
#              id(short_long_press_counter_wb1_ch1) = (uint16_t)x;
#              id(short_long_press_event_wb1_ch1).publish_state(true);
#              id(short_long_press_event_reset_wb1_ch1).execute();
#            }

