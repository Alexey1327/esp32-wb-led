sensor:
  # Яркость
  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: brightness_sensor_ch1
    address: 2000
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 0
    internal: true
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    on_value:
      then:
        - lambda: |-
            uint16_t current = (uint16_t)x;
            if (id(last_brightness_value_ch1) == current) {
              if (!id(brightness_stable_ch1)) {
                id(brightness_stable_ch1) = true;
                float brightness = current / 100.0f;
                if (id(light_ch1).current_values.get_brightness() != brightness) {
                  id(light_ch1).turn_on().set_brightness(brightness).perform();
                }
              }
            } else {
              id(last_brightness_value_ch1) = current;
              id(brightness_stable_ch1) = false;
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: brightness_sensor_ch2
    address: 2001
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 0
    internal: true
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    on_value:
      then:
        - lambda: |-
            uint16_t current = (uint16_t)x;
            if (id(last_brightness_value_ch2) == current) {
              if (!id(brightness_stable_ch2)) {
                id(brightness_stable_ch2) = true;
                float brightness = current / 100.0f;
                if (id(light_ch2).current_values.get_brightness() != brightness) {
                  id(light_ch2).turn_on().set_brightness(brightness).perform();
                }
              }
            } else {
              id(last_brightness_value_ch2) = current;
              id(brightness_stable_ch2) = false;
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: brightness_sensor_ch3
    address: 2002
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 0
    internal: true
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    on_value:
      then:
        - lambda: |-
            uint16_t current = (uint16_t)x;
            if (id(last_brightness_value_ch3) == current) {
              if (!id(brightness_stable_ch3)) {
                id(brightness_stable_ch3) = true;
                float brightness = current / 100.0f;
                if (id(light_ch3).current_values.get_brightness() != brightness) {
                  id(light_ch3).turn_on().set_brightness(brightness).perform();
                }
              }
            } else {
              id(last_brightness_value_ch3) = current;
              id(brightness_stable_ch3) = false;
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: brightness_sensor_ch4
    address: 2003
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 0
    internal: true
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    on_value:
      then:
        - lambda: |-
            uint16_t current = (uint16_t)x;
            if (id(last_brightness_value_ch4) == current) {
              if (!id(brightness_stable_ch4)) {
                id(brightness_stable_ch4) = true;
                float brightness = current / 100.0f;
                if (id(light_ch4).current_values.get_brightness() != brightness) {
                  id(light_ch4).turn_on().set_brightness(brightness).perform();
                }
              }
            } else {
              id(last_brightness_value_ch4) = current;
              id(brightness_stable_ch4) = false;
            }

  # Двойное нажатие
  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: double_press_sensor_ch1
    address: 496
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(double_press_counter_ch1)) {
              id(double_press_counter_ch1) = (uint16_t)x;
              id(double_press_event_ch1).publish_state(true);
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: double_press_sensor_ch2
    address: 497
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(double_press_counter_ch2)) {
              id(double_press_counter_ch2) = (uint16_t)x;
              id(double_press_event_ch2).publish_state(true);
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: double_press_sensor_ch3
    address: 498
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(double_press_counter_ch3)) {
              id(double_press_counter_ch3) = (uint16_t)x;
              id(double_press_event_ch3).publish_state(true);
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: double_press_sensor_ch4
    address: 499
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(double_press_counter_ch4)) {
              id(double_press_counter_ch4) = (uint16_t)x;
              id(double_press_event_ch4).publish_state(true);
            }

  # Коротко + долгое нажатие
  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: short_long_press_sensor_ch1
    address: 512
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(short_long_press_counter_ch1)) {
              id(short_long_press_counter_ch1) = (uint16_t)x;
              id(short_long_press_event_ch1).publish_state(true);
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: short_long_press_sensor_ch2
    address: 513
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(short_long_press_counter_ch2)) {
              id(short_long_press_counter_ch2) = (uint16_t)x;
              id(short_long_press_event_ch2).publish_state(true);
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: short_long_press_sensor_ch3
    address: 514
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(short_long_press_counter_ch3)) {
              id(short_long_press_counter_ch3) = (uint16_t)x;
              id(short_long_press_event_ch3).publish_state(true);
            }

  - platform: modbus_controller
    modbus_controller_id: wb_led_1
    id: short_long_press_sensor_ch4
    address: 515
    register_type: holding
    internal: true
    on_value:
      then:
        - lambda: |-
            if ((uint16_t)x != id(short_long_press_counter_ch4)) {
              id(short_long_press_counter_ch4) = (uint16_t)x;
              id(short_long_press_event_ch4).publish_state(true);
            }
